/*********************************************************************************************************************************
@ Class:          DealStatementTriggerHandlerTest
@ Version:        1.0
@ Author:         Sophal Noch (sophal.noch@gaea-sys.com)
@ Purpose:        Test class for DealStatementTrigger Trigger, class DealStatementTriggerHandler, processbuilder Deal Statement Process
----------------------------------------------------------------------------------------------------------------------------------
@ Change history:  06.06.2021 / Sophal Noch / Created the  class.
*********************************************************************************************************************************/
@isTest
private class DealStatementTriggerHandlerTest {
    
    static void setup(){
    	byPass__c settings = byPass__c.getOrgDefaults();
        settings.ByPass_Validation__c = true;
        upsert settings byPass__c.Id;
        
         Deal_Statement_Setting__c setting = new Deal_Statement_Setting__c();
        setting.Initial_Payout__c=60;
        setting.Amount_Held_Back__c=40;
        insert setting;

        Profile adminProfile = [select Id,Name from Profile where Name = 'System Administrator'];

        User user = new User();
        user.Alias='AMT';
        user.Email='amtmail@ebay.com';
        user.EmailEncodingKey='UTF-8';
        user.LastName='AMTUser';
        user.LanguageLocaleKey='en_US'; 
        user.LocaleSidKey='en_US';
        user.ProfileId = adminProfile.Id;
        user.TimeZoneSidKey='America/Los_Angeles';
        user.UserName='amtmail@ebay.com';
        insert user;
        
        Deal_Timezone__c dealTimezone = new Deal_Timezone__c();
        dealTimezone.TimeZone__c='America/Los_Angeles';     
        insert dealTimezone;

        Account acc = new Account();
        acc.Name = 'AMT_Account';
        acc.BillingCountry = 'US';
        insert acc;

        Account eBSeller = new Account();
        eBSeller.Name = 'AMT_Seller';
        //eBSeller.Account__c = acc.Id;
        eBSeller.EBH_MainVertical__c = 'Electronics';
        eBSeller.EBH_OracleID__c = 'AXTP-930494';
        //eBSeller.Daily_Deals_Whitelist__c = true;
        insert eBSeller;

        Contact cont = new Contact(RecordtypeId=ApexUtil.getRecordTypeByName('Contact', 'EBH_MANUAL').Id);
        cont.LastName = 'AMT_Cont';
        cont.AccountId = eBSeller.Id;
        cont.Contact_Role__c='Deals;NA Deals Statement Recipient';
        cont.Email ='test@ebay.dailydeal.com';
        // cont.EBH_Decision_Maker_Role__c = 'Deals'; //MN:13/05/2021:US-0009542 - [NA] Deals: Remove unused value from 'Decision Maker Role' on Contact
        insert cont;

        EBH_SpotlightCategory__c spCat = new EBH_SpotlightCategory__c();
        spCat.Name = 'AMT_Spotligth NA';
        spCat.EBH_Country__c = 'NA';
        spCat.EBH_SpotlightCategoryID__c = 'SCiD-934035';
        //spCat.Vertical__c = 'Fashion';
        insert spCat;

        Date myDate = System.Today().adddays(2);
        Time myTime = Time.newInstance(1, 1, 1, 1);
        Id euRecordTypeId = Schema.SObjectType.EBH_Deal__c.getRecordTypeInfosByName().get('NA Deal').getRecordTypeId();
        
        EBH_Deal__c deal1 = new EBH_Deal__c();
        deal1.RecordTypeId = euRecordTypeId;
        deal1.Merchant_Approver__c = user.Id;
        deal1.EBH_BusinessName__c = eBSeller.Id;
        deal1.EBH_ProductTitle__c = 'AMTProductTest';
        deal1.EBH_DealSiteId__c = '0';
        deal1.EBH_Vertical__c = 'Home & Garden';
        deal1.EBH_Category__c='Home & Garden';
        deal1.Sub_Category__c = 'Bedding';
        deal1.EBH_DealFormat__c = 'Primary';
        deal1.EBH_DealStartDate__c = myDate;
        deal1.EBH_DealStartTime__c = myTime;
        deal1.EBH_DealEndDate__c = myDate;
        deal1.EBH_DealEndTime__c = myTime;
        deal1.EBH_Status__c = 'New';
        deal1.EBH_Quantity__c = 1;
        deal1.Quantity_Limitation_per_Purchaser__c = 1;
        deal1.EBH_DealPrice__c = 1;
        deal1.EBH_SellerPrice__c = 1;
        deal1.EBH_SoldItemsForecast__c = 123456;
        deal1.Seller_Approver_1__c = cont.Id;
        deal1.Sold_Items_30_Days__c = 1;
        deal1.Sold_Items_60_Days__c = 2;
        deal1.Final_Sold_Items__c = 1; 
        
     
        EBH_Deal__c deal2 = deal1.clone(false,false,false,false);
        insert new List<EBH_Deal__c>{deal1,deal2};
        
        
        Deal_Statement__c ds1 = new Deal_Statement__c();
        ds1.Name = eBSeller.Name+myDate.month()+'Statement';
        ds1.Subsidy_30_Day_Calculation__c = 10;
        ds1.Subsidy_Final_Calculation__c=0;                 
        ds1.Status__c = 'Draft';
        ds1.Initial_Payout__c =60;
        ds1.Second_Payout__c=40;
        ds1.eBay_Seller__c =deal1.EBH_BusinessName__c ;
        ds1.Subsidy_Final_Calculation__c=0;
        ds1.Month__c=myDate.month()+'';
        ds1.Amount_Held_Back__c=40;
        ds1.Initial_Payout__c=60;    
        ds1.Last_Statement_Sent_Out__c = System.now();
        insert ds1;

        deal1.Deal_Statement__c = ds1.Id;
        deal2.Deal_Statement__c = ds1.Id;
        update new List<EBH_Deal__c>{deal1,deal2};
   


        ds1.Status__c = '1st Statement'; // when status == '1st Statement' and create attachment
        update ds1;

        // 05.05.2021 / Sophal Noch / US-0009424

        Deal_Statement__c queriedDs1 =[Select  Id,MostRecentFirstStatement__c, Status__c from Deal_Statement__c where id =: ds1.Id];
        List<Attachment> files = [Select Id From Attachment Where Id=:queriedDs1.MostRecentFirstStatement__c];
        System.assertEquals(1, files.size());


        List<ProcessInstanceWorkitem> workItems = [Select id, ProcessInstance.TargetObjectId FROM ProcessInstanceWorkitem WHERE ProcessInstance.TargetObjectId =:queriedDs1.Id AND ProcessInstance.Status = 'Pending'];
        if(!workItems.isEmpty()){ //in case, process builder run and cause deal statement to submit for approval
            Approval.ProcessWorkitemRequest req = new Approval.ProcessWorkitemRequest();
            req.setAction('Removed');
            req.setWorkItemId(workItems[0].id);
            Approval.process(req, true); // remove approval process, this for test class only
            System.assertEquals('In 1st Payout Approval', queriedDs1.Status__c);
        }else{
            System.assertEquals('1st Statement', queriedDs1.Status__c);
        }

        ds1.Status__c = '1st Payout Approved';
        update ds1;

        


    }

    @isTest 
    private static void testFirstStatementAndGenerateXsl(){
        // 05.05.2021 / Sophal Noch / US-0009424
        Test.startTest();
        setup();
        Test.stopTest();
        List<Deal_Statement__c> dealStateLst = [SELECT Id, MostRecentFirstStatement__c,MostRecentFirstStatementDate__c,  Name FROM Deal_Statement__c WHERE Status__c = '1st Payout Approved'];
        Deal_Statement__c ds = dealStateLst[0];
        System.assertNotEquals(null, ds.MostRecentFirstStatement__c);
        System.assertNotEquals(null, ds.MostRecentFirstStatementDate__c);

        List<Attachment> files = [Select Id,Body From Attachment Where Id=:ds.MostRecentFirstStatement__c Order by Id desc];
        System.assertEquals(1, files.size());
        System.assertEquals(Blob.valueOf('test').toString(), files[0].Body.toString());

        Cache.Org.remove(DD_DealStatementSpreadsheetController.DS_CACHE_KEY+dealStateLst[0].Id);   

        Cache.Org.remove(DD_DealStatementSpreadsheetController.DEALS_CACHE_KEY+dealStateLst[0].Id);
    }
    /*
    @isTest 
    private static void testSecondStatementAndGenerateXsl(){
        // 05.05.2021 / Sophal Noch / US-0009424
        setup();

        List<Deal_Statement__c> dealStateLst = [SELECT Id, MostRecentFinalStatement__c, Name FROM Deal_Statement__c WHERE Status__c = '1st Payout Approved'];
        Deal_Statement__c ds = dealStateLst[0];

        ds.Subsidy_Final_Calculation__c = 20;  
        ds.Status__c = '2nd Statement';  // when status == '2nd Statement' and create attachment
        Test.startTest();
        update ds; // need to be inside Test.startTest and Test.stopTest because of the future method need to run completely first
        Test.stopTest();

        // 05.05.2021 / Sophal Noch / US-0009424
        Deal_Statement__c queriedDs =[Select  Id,MostRecentFinalStatement__c,MostRecentFinalStatementDate__c, Status__c from Deal_Statement__c where id =: ds.Id];
        System.assertNotEquals(null, queriedDs.MostRecentFinalStatement__c);
        System.assertNotEquals(null, queriedDs.MostRecentFinalStatementDate__c);

        List<Attachment> files = [Select Id,Body From Attachment Where Id=:queriedDs.MostRecentFinalStatement__c Order by Id desc];
        System.assertEquals(1, files.size());
        System.assertEquals(Blob.valueOf('test').toString(), files[0].Body.toString());

        System.assertEquals('In 2nd Payout Approval', queriedDs.Status__c); // approval process trigger from process builder 'Deal Statement Process'

        Cache.Org.remove(DD_DealStatementSpreadsheetController.DS_CACHE_KEY+ds.Id);   

        Cache.Org.remove(DD_DealStatementSpreadsheetController.DEALS_CACHE_KEY+ds.Id);

    }
    */

}